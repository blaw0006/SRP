Thu, 01 Feb 2024 09:11:54 main.py[line:73] INFO Namespace(augmentation='mixup', batch_size=2, cuda=False, dataset_dir='/home/acrv/blaw_ws/src/ur5_control/src/SRP/src/wav_files', filename='main', freeze_base=False, holdout_fold='1', learning_rate=0.0001, loss_type='clip_nll', mode='train', model_type='Transfer_Cnn14_16k', pretrained_checkpoint_path='/home/acrv/blaw_ws/src/ur5_control/src/SRP/panns_transfer_to_gtzan/workspace/Cnn14_16k_mAP=0.438.pth', resume_iteration=0, stop_iteration=10000, workspace='/home/acrv/blaw_ws/src/ur5_control/src/SRP/panns_transfer_to_gtzan')
Thu, 01 Feb 2024 09:11:54 main.py[line:78] INFO Using CPU. Set --cuda flag to use GPU.
Thu, 01 Feb 2024 09:11:54 byteflow.py[line:76] DEBUG bytecode dump:
>          0	NOP(arg=None, lineno=1039)
           2	LOAD_FAST(arg=0, lineno=1042)
           4	LOAD_CONST(arg=1, lineno=1042)
           6	BINARY_SUBSCR(arg=None, lineno=1042)
           8	LOAD_FAST(arg=0, lineno=1042)
          10	LOAD_CONST(arg=2, lineno=1042)
          12	BINARY_SUBSCR(arg=None, lineno=1042)
          14	COMPARE_OP(arg=4, lineno=1042)
          16	LOAD_FAST(arg=0, lineno=1042)
          18	LOAD_CONST(arg=1, lineno=1042)
          20	BINARY_SUBSCR(arg=None, lineno=1042)
          22	LOAD_FAST(arg=0, lineno=1042)
          24	LOAD_CONST(arg=3, lineno=1042)
          26	BINARY_SUBSCR(arg=None, lineno=1042)
          28	COMPARE_OP(arg=5, lineno=1042)
          30	BINARY_AND(arg=None, lineno=1042)
          32	RETURN_VALUE(arg=None, lineno=1042)
Thu, 01 Feb 2024 09:11:54 byteflow.py[line:102] DEBUG pending: deque([State(pc_initial=0 nstack_initial=0)])
Thu, 01 Feb 2024 09:11:54 byteflow.py[line:105] DEBUG stack: []
Thu, 01 Feb 2024 09:11:54 byteflow.py[line:106] DEBUG state.pc_initial: State(pc_initial=0 nstack_initial=0)
Thu, 01 Feb 2024 09:11:54 byteflow.py[line:333] DEBUG dispatch pc=0, inst=NOP(arg=None, lineno=1039)
Thu, 01 Feb 2024 09:11:54 byteflow.py[line:334] DEBUG stack []
Thu, 01 Feb 2024 09:11:54 byteflow.py[line:333] DEBUG dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=1042)
Thu, 01 Feb 2024 09:11:54 byteflow.py[line:334] DEBUG stack []
Thu, 01 Feb 2024 09:11:54 byteflow.py[line:333] DEBUG dispatch pc=4, inst=LOAD_CONST(arg=1, lineno=1042)
Thu, 01 Feb 2024 09:11:54 byteflow.py[line:334] DEBUG stack ['$x2.0']
Thu, 01 Feb 2024 09:11:54 byteflow.py[line:333] DEBUG dispatch pc=6, inst=BINARY_SUBSCR(arg=None, lineno=1042)
Thu, 01 Feb 2024 09:11:54 byteflow.py[line:334] DEBUG stack ['$x2.0', '$const4.1']
Thu, 01 Feb 2024 09:11:54 byteflow.py[line:333] DEBUG dispatch pc=8, inst=LOAD_FAST(arg=0, lineno=1042)
Thu, 01 Feb 2024 09:11:54 byteflow.py[line:334] DEBUG stack ['$6binary_subscr.2']
Thu, 01 Feb 2024 09:11:54 byteflow.py[line:333] DEBUG dispatch pc=10, inst=LOAD_CONST(arg=2, lineno=1042)
Thu, 01 Feb 2024 09:11:54 byteflow.py[line:334] DEBUG stack ['$6binary_subscr.2', '$x8.3']
Thu, 01 Feb 2024 09:11:54 byteflow.py[line:333] DEBUG dispatch pc=12, inst=BINARY_SUBSCR(arg=None, lineno=1042)
Thu, 01 Feb 2024 09:11:54 byteflow.py[line:334] DEBUG stack ['$6binary_subscr.2', '$x8.3', '$const10.4']
Thu, 01 Feb 2024 09:11:54 byteflow.py[line:333] DEBUG dispatch pc=14, inst=COMPARE_OP(arg=4, lineno=1042)
Thu, 01 Feb 2024 09:11:54 byteflow.py[line:334] DEBUG stack ['$6binary_subscr.2', '$12binary_subscr.5']
Thu, 01 Feb 2024 09:11:54 byteflow.py[line:333] DEBUG dispatch pc=16, inst=LOAD_FAST(arg=0, lineno=1042)
Thu, 01 Feb 2024 09:11:54 byteflow.py[line:334] DEBUG stack ['$14compare_op.6']
Thu, 01 Feb 2024 09:11:54 byteflow.py[line:333] DEBUG dispatch pc=18, inst=LOAD_CONST(arg=1, lineno=1042)
Thu, 01 Feb 2024 09:11:54 byteflow.py[line:334] DEBUG stack ['$14compare_op.6', '$x16.7']
Thu, 01 Feb 2024 09:11:54 byteflow.py[line:333] DEBUG dispatch pc=20, inst=BINARY_SUBSCR(arg=None, lineno=1042)
Thu, 01 Feb 2024 09:11:54 byteflow.py[line:334] DEBUG stack ['$14compare_op.6', '$x16.7', '$const18.8']
Thu, 01 Feb 2024 09:11:54 byteflow.py[line:333] DEBUG dispatch pc=22, inst=LOAD_FAST(arg=0, lineno=1042)
Thu, 01 Feb 2024 09:11:54 byteflow.py[line:334] DEBUG stack ['$14compare_op.6', '$20binary_subscr.9']
Thu, 01 Feb 2024 09:11:54 byteflow.py[line:333] DEBUG dispatch pc=24, inst=LOAD_CONST(arg=3, lineno=1042)
Thu, 01 Feb 2024 09:11:54 byteflow.py[line:334] DEBUG stack ['$14compare_op.6', '$20binary_subscr.9', '$x22.10']
Thu, 01 Feb 2024 09:11:54 byteflow.py[line:333] DEBUG dispatch pc=26, inst=BINARY_SUBSCR(arg=None, lineno=1042)
Thu, 01 Feb 2024 09:11:54 byteflow.py[line:334] DEBUG stack ['$14compare_op.6', '$20binary_subscr.9', '$x22.10', '$const24.11']
Thu, 01 Feb 2024 09:11:54 byteflow.py[line:333] DEBUG dispatch pc=28, inst=COMPARE_OP(arg=5, lineno=1042)
Thu, 01 Feb 2024 09:11:54 byteflow.py[line:334] DEBUG stack ['$14compare_op.6', '$20binary_subscr.9', '$26binary_subscr.12']
Thu, 01 Feb 2024 09:11:54 byteflow.py[line:333] DEBUG dispatch pc=30, inst=BINARY_AND(arg=None, lineno=1042)
Thu, 01 Feb 2024 09:11:54 byteflow.py[line:334] DEBUG stack ['$14compare_op.6', '$28compare_op.13']
Thu, 01 Feb 2024 09:11:54 byteflow.py[line:333] DEBUG dispatch pc=32, inst=RETURN_VALUE(arg=None, lineno=1042)
Thu, 01 Feb 2024 09:11:54 byteflow.py[line:334] DEBUG stack ['$30binary_and.14']
Thu, 01 Feb 2024 09:11:54 byteflow.py[line:124] DEBUG end state. edges=[]
Thu, 01 Feb 2024 09:11:54 byteflow.py[line:205] DEBUG -------------------------Prune PHIs-------------------------
Thu, 01 Feb 2024 09:11:54 byteflow.py[line:274] DEBUG Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
Thu, 01 Feb 2024 09:11:54 byteflow.py[line:231] DEBUG defmap: {}
Thu, 01 Feb 2024 09:11:54 byteflow.py[line:232] DEBUG phismap: defaultdict(<class 'set'>, {})
Thu, 01 Feb 2024 09:11:54 byteflow.py[line:253] DEBUG changing phismap: defaultdict(<class 'set'>, {})
Thu, 01 Feb 2024 09:11:54 byteflow.py[line:262] DEBUG keep phismap: {}
Thu, 01 Feb 2024 09:11:54 byteflow.py[line:268] DEBUG new_out: defaultdict(<class 'dict'>, {})
Thu, 01 Feb 2024 09:11:54 byteflow.py[line:278] DEBUG ----------------------DONE Prune PHIs-----------------------
Thu, 01 Feb 2024 09:11:54 byteflow.py[line:136] DEBUG block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$x2.0'}), (4, {'res': '$const4.1'}), (6, {'index': '$const4.1', 'target': '$x2.0', 'res': '$6binary_subscr.2'}), (8, {'res': '$x8.3'}), (10, {'res': '$const10.4'}), (12, {'index': '$const10.4', 'target': '$x8.3', 'res': '$12binary_subscr.5'}), (14, {'lhs': '$6binary_subscr.2', 'rhs': '$12binary_subscr.5', 'res': '$14compare_op.6'}), (16, {'res': '$x16.7'}), (18, {'res': '$const18.8'}), (20, {'index': '$const18.8', 'target': '$x16.7', 'res': '$20binary_subscr.9'}), (22, {'res': '$x22.10'}), (24, {'res': '$const24.11'}), (26, {'index': '$const24.11', 'target': '$x22.10', 'res': '$26binary_subscr.12'}), (28, {'lhs': '$20binary_subscr.9', 'rhs': '$26binary_subscr.12', 'res': '$28compare_op.13'}), (30, {'lhs': '$14compare_op.6', 'rhs': '$28compare_op.13', 'res': '$30binary_and.14'}), (32, {'retval': '$30binary_and.14', 'castval': '$32return_value.15'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
Thu, 01 Feb 2024 09:11:54 interpreter.py[line:1390] DEBUG label 0:
    x = arg(0, name=x)                       ['x']
    $const4.1 = const(int, 0)                ['$const4.1']
    $6binary_subscr.2 = getitem(value=x, index=$const4.1, fn=<built-in function getitem>) ['$6binary_subscr.2', '$const4.1', 'x']
    $const10.4 = const(int, -1)              ['$const10.4']
    $12binary_subscr.5 = getitem(value=x, index=$const10.4, fn=<built-in function getitem>) ['$12binary_subscr.5', '$const10.4', 'x']
    $14compare_op.6 = $6binary_subscr.2 > $12binary_subscr.5 ['$12binary_subscr.5', '$14compare_op.6', '$6binary_subscr.2']
    $const18.8 = const(int, 0)               ['$const18.8']
    $20binary_subscr.9 = getitem(value=x, index=$const18.8, fn=<built-in function getitem>) ['$20binary_subscr.9', '$const18.8', 'x']
    $const24.11 = const(int, 1)              ['$const24.11']
    $26binary_subscr.12 = getitem(value=x, index=$const24.11, fn=<built-in function getitem>) ['$26binary_subscr.12', '$const24.11', 'x']
    $28compare_op.13 = $20binary_subscr.9 >= $26binary_subscr.12 ['$20binary_subscr.9', '$26binary_subscr.12', '$28compare_op.13']
    $30binary_and.14 = $14compare_op.6 & $28compare_op.13 ['$14compare_op.6', '$28compare_op.13', '$30binary_and.14']
    $32return_value.15 = cast(value=$30binary_and.14) ['$30binary_and.14', '$32return_value.15']
    return $32return_value.15                ['$32return_value.15']

Thu, 01 Feb 2024 09:11:54 byteflow.py[line:76] DEBUG bytecode dump:
>          0	NOP(arg=None, lineno=1045)
           2	LOAD_FAST(arg=0, lineno=1048)
           4	LOAD_CONST(arg=1, lineno=1048)
           6	BINARY_SUBSCR(arg=None, lineno=1048)
           8	LOAD_FAST(arg=0, lineno=1048)
          10	LOAD_CONST(arg=2, lineno=1048)
          12	BINARY_SUBSCR(arg=None, lineno=1048)
          14	COMPARE_OP(arg=0, lineno=1048)
          16	LOAD_FAST(arg=0, lineno=1048)
          18	LOAD_CONST(arg=1, lineno=1048)
          20	BINARY_SUBSCR(arg=None, lineno=1048)
          22	LOAD_FAST(arg=0, lineno=1048)
          24	LOAD_CONST(arg=3, lineno=1048)
          26	BINARY_SUBSCR(arg=None, lineno=1048)
          28	COMPARE_OP(arg=1, lineno=1048)
          30	BINARY_AND(arg=None, lineno=1048)
          32	RETURN_VALUE(arg=None, lineno=1048)
Thu, 01 Feb 2024 09:11:54 byteflow.py[line:102] DEBUG pending: deque([State(pc_initial=0 nstack_initial=0)])
Thu, 01 Feb 2024 09:11:54 byteflow.py[line:105] DEBUG stack: []
Thu, 01 Feb 2024 09:11:54 byteflow.py[line:106] DEBUG state.pc_initial: State(pc_initial=0 nstack_initial=0)
Thu, 01 Feb 2024 09:11:54 byteflow.py[line:333] DEBUG dispatch pc=0, inst=NOP(arg=None, lineno=1045)
Thu, 01 Feb 2024 09:11:54 byteflow.py[line:334] DEBUG stack []
Thu, 01 Feb 2024 09:11:54 byteflow.py[line:333] DEBUG dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=1048)
Thu, 01 Feb 2024 09:11:54 byteflow.py[line:334] DEBUG stack []
Thu, 01 Feb 2024 09:11:54 byteflow.py[line:333] DEBUG dispatch pc=4, inst=LOAD_CONST(arg=1, lineno=1048)
Thu, 01 Feb 2024 09:11:54 byteflow.py[line:334] DEBUG stack ['$x2.0']
Thu, 01 Feb 2024 09:11:54 byteflow.py[line:333] DEBUG dispatch pc=6, inst=BINARY_SUBSCR(arg=None, lineno=1048)
Thu, 01 Feb 2024 09:11:54 byteflow.py[line:334] DEBUG stack ['$x2.0', '$const4.1']
Thu, 01 Feb 2024 09:11:54 byteflow.py[line:333] DEBUG dispatch pc=8, inst=LOAD_FAST(arg=0, lineno=1048)
Thu, 01 Feb 2024 09:11:54 byteflow.py[line:334] DEBUG stack ['$6binary_subscr.2']
Thu, 01 Feb 2024 09:11:54 byteflow.py[line:333] DEBUG dispatch pc=10, inst=LOAD_CONST(arg=2, lineno=1048)
Thu, 01 Feb 2024 09:11:54 byteflow.py[line:334] DEBUG stack ['$6binary_subscr.2', '$x8.3']
Thu, 01 Feb 2024 09:11:54 byteflow.py[line:333] DEBUG dispatch pc=12, inst=BINARY_SUBSCR(arg=None, lineno=1048)
Thu, 01 Feb 2024 09:11:54 byteflow.py[line:334] DEBUG stack ['$6binary_subscr.2', '$x8.3', '$const10.4']
Thu, 01 Feb 2024 09:11:54 byteflow.py[line:333] DEBUG dispatch pc=14, inst=COMPARE_OP(arg=0, lineno=1048)
Thu, 01 Feb 2024 09:11:54 byteflow.py[line:334] DEBUG stack ['$6binary_subscr.2', '$12binary_subscr.5']
Thu, 01 Feb 2024 09:11:54 byteflow.py[line:333] DEBUG dispatch pc=16, inst=LOAD_FAST(arg=0, lineno=1048)
Thu, 01 Feb 2024 09:11:54 byteflow.py[line:334] DEBUG stack ['$14compare_op.6']
Thu, 01 Feb 2024 09:11:54 byteflow.py[line:333] DEBUG dispatch pc=18, inst=LOAD_CONST(arg=1, lineno=1048)
Thu, 01 Feb 2024 09:11:54 byteflow.py[line:334] DEBUG stack ['$14compare_op.6', '$x16.7']
Thu, 01 Feb 2024 09:11:54 byteflow.py[line:333] DEBUG dispatch pc=20, inst=BINARY_SUBSCR(arg=None, lineno=1048)
Thu, 01 Feb 2024 09:11:54 byteflow.py[line:334] DEBUG stack ['$14compare_op.6', '$x16.7', '$const18.8']
Thu, 01 Feb 2024 09:11:54 byteflow.py[line:333] DEBUG dispatch pc=22, inst=LOAD_FAST(arg=0, lineno=1048)
Thu, 01 Feb 2024 09:11:54 byteflow.py[line:334] DEBUG stack ['$14compare_op.6', '$20binary_subscr.9']
Thu, 01 Feb 2024 09:11:54 byteflow.py[line:333] DEBUG dispatch pc=24, inst=LOAD_CONST(arg=3, lineno=1048)
Thu, 01 Feb 2024 09:11:54 byteflow.py[line:334] DEBUG stack ['$14compare_op.6', '$20binary_subscr.9', '$x22.10']
Thu, 01 Feb 2024 09:11:54 byteflow.py[line:333] DEBUG dispatch pc=26, inst=BINARY_SUBSCR(arg=None, lineno=1048)
Thu, 01 Feb 2024 09:11:54 byteflow.py[line:334] DEBUG stack ['$14compare_op.6', '$20binary_subscr.9', '$x22.10', '$const24.11']
Thu, 01 Feb 2024 09:11:54 byteflow.py[line:333] DEBUG dispatch pc=28, inst=COMPARE_OP(arg=1, lineno=1048)
Thu, 01 Feb 2024 09:11:54 byteflow.py[line:334] DEBUG stack ['$14compare_op.6', '$20binary_subscr.9', '$26binary_subscr.12']
Thu, 01 Feb 2024 09:11:54 byteflow.py[line:333] DEBUG dispatch pc=30, inst=BINARY_AND(arg=None, lineno=1048)
Thu, 01 Feb 2024 09:11:54 byteflow.py[line:334] DEBUG stack ['$14compare_op.6', '$28compare_op.13']
Thu, 01 Feb 2024 09:11:54 byteflow.py[line:333] DEBUG dispatch pc=32, inst=RETURN_VALUE(arg=None, lineno=1048)
Thu, 01 Feb 2024 09:11:54 byteflow.py[line:334] DEBUG stack ['$30binary_and.14']
Thu, 01 Feb 2024 09:11:54 byteflow.py[line:124] DEBUG end state. edges=[]
Thu, 01 Feb 2024 09:11:54 byteflow.py[line:205] DEBUG -------------------------Prune PHIs-------------------------
Thu, 01 Feb 2024 09:11:54 byteflow.py[line:274] DEBUG Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
Thu, 01 Feb 2024 09:11:54 byteflow.py[line:231] DEBUG defmap: {}
Thu, 01 Feb 2024 09:11:54 byteflow.py[line:232] DEBUG phismap: defaultdict(<class 'set'>, {})
Thu, 01 Feb 2024 09:11:54 byteflow.py[line:253] DEBUG changing phismap: defaultdict(<class 'set'>, {})
Thu, 01 Feb 2024 09:11:54 byteflow.py[line:262] DEBUG keep phismap: {}
Thu, 01 Feb 2024 09:11:54 byteflow.py[line:268] DEBUG new_out: defaultdict(<class 'dict'>, {})
Thu, 01 Feb 2024 09:11:54 byteflow.py[line:278] DEBUG ----------------------DONE Prune PHIs-----------------------
Thu, 01 Feb 2024 09:11:54 byteflow.py[line:136] DEBUG block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$x2.0'}), (4, {'res': '$const4.1'}), (6, {'index': '$const4.1', 'target': '$x2.0', 'res': '$6binary_subscr.2'}), (8, {'res': '$x8.3'}), (10, {'res': '$const10.4'}), (12, {'index': '$const10.4', 'target': '$x8.3', 'res': '$12binary_subscr.5'}), (14, {'lhs': '$6binary_subscr.2', 'rhs': '$12binary_subscr.5', 'res': '$14compare_op.6'}), (16, {'res': '$x16.7'}), (18, {'res': '$const18.8'}), (20, {'index': '$const18.8', 'target': '$x16.7', 'res': '$20binary_subscr.9'}), (22, {'res': '$x22.10'}), (24, {'res': '$const24.11'}), (26, {'index': '$const24.11', 'target': '$x22.10', 'res': '$26binary_subscr.12'}), (28, {'lhs': '$20binary_subscr.9', 'rhs': '$26binary_subscr.12', 'res': '$28compare_op.13'}), (30, {'lhs': '$14compare_op.6', 'rhs': '$28compare_op.13', 'res': '$30binary_and.14'}), (32, {'retval': '$30binary_and.14', 'castval': '$32return_value.15'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
Thu, 01 Feb 2024 09:11:54 interpreter.py[line:1390] DEBUG label 0:
    x = arg(0, name=x)                       ['x']
    $const4.1 = const(int, 0)                ['$const4.1']
    $6binary_subscr.2 = getitem(value=x, index=$const4.1, fn=<built-in function getitem>) ['$6binary_subscr.2', '$const4.1', 'x']
    $const10.4 = const(int, -1)              ['$const10.4']
    $12binary_subscr.5 = getitem(value=x, index=$const10.4, fn=<built-in function getitem>) ['$12binary_subscr.5', '$const10.4', 'x']
    $14compare_op.6 = $6binary_subscr.2 < $12binary_subscr.5 ['$12binary_subscr.5', '$14compare_op.6', '$6binary_subscr.2']
    $const18.8 = const(int, 0)               ['$const18.8']
    $20binary_subscr.9 = getitem(value=x, index=$const18.8, fn=<built-in function getitem>) ['$20binary_subscr.9', '$const18.8', 'x']
    $const24.11 = const(int, 1)              ['$const24.11']
    $26binary_subscr.12 = getitem(value=x, index=$const24.11, fn=<built-in function getitem>) ['$26binary_subscr.12', '$const24.11', 'x']
    $28compare_op.13 = $20binary_subscr.9 <= $26binary_subscr.12 ['$20binary_subscr.9', '$26binary_subscr.12', '$28compare_op.13']
    $30binary_and.14 = $14compare_op.6 & $28compare_op.13 ['$14compare_op.6', '$28compare_op.13', '$30binary_and.14']
    $32return_value.15 = cast(value=$30binary_and.14) ['$30binary_and.14', '$32return_value.15']
    return $32return_value.15                ['$32return_value.15']

Thu, 01 Feb 2024 09:11:54 main.py[line:90] INFO Load pretrained model from /home/acrv/blaw_ws/src/ur5_control/src/SRP/panns_transfer_to_gtzan/workspace/Cnn14_16k_mAP=0.438.pth
